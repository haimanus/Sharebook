<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeEffects.Rule</name>
    </assembly>
    <members>
        <member name="T:CodeEffects.Rule.Attributes.OperatorAttribute">
            <summary>
            This entire class will be marked as obsolete in one of the next versions of Web Rule
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.ClauseAttribute">
            <summary>
            This entire class will be marked as obsolete in one of the next versions of Web Rule
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.Evaluator`1">
            <summary>
            <para>Compiles and executes business rules against source objects.</para>
            <para>One or more rules may be combined into one single XML string. If a rule contains references to other external rules,
            the Evaluator will try to locate them among rules in the given XML or call a delegate, if one is provided. Rules then are
            compiled and stored in memory for future execution by Evaluate methods.</para>
            </summary>
            <remarks>See http://rule.codeeffects.com/schemas/rule schema for information on full ruleset format.</remarks>
            <typeparam name="TSource">The type of a source object against which rules are evaluated.</typeparam>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Evaluator to a specified set of rules.
            </summary>
            <remarks>Any rules referenced inside another rule must be included in the ruleset or an exception will be thrown.</remarks>
            <param name="rulesetXml">An XML containing one or more rules to be evaluted against objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.#ctor(System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Initializes a new instance of the Evaluator to a specified set of rules. A delegate of type GetRuleDelegate is used
            to request any rule that may be referenced inside another rule.
            </summary>
            <param name="rulesetXml">The XML containing one or more rules to be evaluted against objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)">
            <summary>
            Executes (evaluates) the rule against the source object. If no id is provided,
            the first rule of the ruleset will be used.
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleId">An optional id of a rule. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its id. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or exception wil be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.Int32)">
            <summary>
            Executes (evaluates) the specific rule against the source object. 
            </summary>
            <param name="source">The object which needs to be evaluated. It acts as a source of data for the rule.</param>
            <param name="ruleIndex">An index of a rule to be executed. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its index. <remarks>Not to be confused with external rules referenced inside other rules. This rule must be present as a top
            level rule inside the ruleset or exception wil be thrown.</remarks></param>
            <returns>Returns boolean result of evaluation: true if successful, false otherwise.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.RuleEditorBuilder">
            <summary>
            Provides a wrapper for the RuleEditor class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.#ctor(System.Web.Mvc.ViewContext)">
            <summary>
            Public constructor of the RuleEditorBuilder class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Id(System.String)">
            <summary>
            Sets the value of the server ID of the RuleEditor class. Used to distinguish this instance of
            the RuleEditor from all other instances that may be declared on the same view.
            </summary>
            <param name="id">Server ID of this instance of the RuleEditor</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.SaveAction(System.String,System.String)">
            <summary>
            Sets the value of the SaveAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="saveAction">Name of the Save action</param>
            <param name="saveController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.DeleteAction(System.String,System.String)">
            <summary>
            Sets the value of the DeleteAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="deleteAction">Name of the Delete action</param>
            <param name="deleteController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.LoadAction(System.String,System.String)">
            <summary>
            Sets the value of the LoadAction property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="loadAction">Name of the Load action</param>
            <param name="loadController">Name of the controller</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ToolBarRules(System.Collections.Generic.List{CodeEffects.Rule.Common.MenuItem})">
            <summary>
            Sets the value of the ToolBarRules property of the underlying instance of RuleEditor class. The rules
            from this collection appear in the Rules menu of the Tool Bar. The collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
            <param name="toolBarRules">List of rules</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ContextMenuRules(System.Collections.Generic.List{CodeEffects.Rule.Common.MenuItem})">
            <summary>
            Sets the value of the ContextMenuRules property of the underlying instance of RuleEditor class. The rules
            from this collection appear in the context menus of Web Rule as regular fields. Make sure
            that only rules of evaluation type are added to this list. This property is ignored if
            ShowToolBar is set to False. 
            </summary>
            <param name="contextMenuRules">List of rules</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Help(System.String)">
            <summary>
            Sets the value of the HelpXmlFile property of the underlying instance of RuleEditor class. HelpXmlFile
            property allows you to specify a Help XML file that contains different values for Help String messages, Tool Bar
            labels and valiadation error messages. This could be helpful for multilingual applications.
            </summary>
            <param name="helpXmlFilePath">Virtual path to the custom Help XML file</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Help(System.Xml.XmlDocument)">
            <summary>
            Sets the value of the HelpXml property of the underlying instance of RuleEditor class. HelpXml
            property allows you to specify a Help XML that contains different values for Help String messages, Tool Bar
            labels and valiadation error messages. This could be helpful for multilingual applications.
            </summary>
            <param name="helpXml">Xml document object of the custom help</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Rule(CodeEffects.Rule.Models.RuleModel)">
            <summary>
            Sets the value of the Rule property of the underlying instance of RuleEditor class.
            </summary>
            <param name="rule">Instance of the rule model</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Theme(CodeEffects.Rule.Common.ThemeType)">
            <summary>
            Sets the value of the Theme property of the underlying instance of RuleEditor class.
            </summary>
            <param name="theme">One of the members of ThemeType enumerator</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Mode(CodeEffects.Rule.Common.RuleType)">
            <summary>
            Sets the value of the Mode property of the underlying instance of RuleEditor class.
            </summary>
            <param name="mode">One of the members of RuleType enumerator. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowHelpString(System.Boolean)">
            <summary>
            Sets the value of the ShowHelpString property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showHelpString">Value of False instructs Web Rule not to display the Help String.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowLineDots(System.Boolean)">
            <summary>
            Sets the value of the ShowLineDots property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showLineDots">Value of True instructs Web Rule to display "line dots" at the beginning of
            each new line in the Rule Area</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowMenuOnRightArrowKey(System.Boolean)">
            <summary>
            Sets the value of the ShowMenuOnRightArrowKey property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display context menus when user presses the
            "right arrow" key while navigating the rule</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowMenuOnElementClicked(System.Boolean)">
            <summary>
            Sets the value of the ShowMenuOnElementClicked property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display context menus when user clicks rule elements</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowDescriptionsOnMouseHover(System.Boolean)">
            <summary>
            Sets the value of the ShowDescriptionsOnMouseHover property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showMenuOnRightArrowKey">Value of False instructs Web Rule not to display element descriptions</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.RuleNameIsRequired(System.Boolean)">
            <summary>
            Sets the value of the RuleNameIsRequired property of the underlying instance of RuleEditor class. This property is
            ignored if ShowToolBar is set to False. 
            </summary>
            <param name="ruleNameIsRequired">Name of the Save action</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ShowToolBar(System.Boolean)">
            <summary>
            Sets the value of the ShowToolBar property of the underlying instance of RuleEditor class.
            </summary>
            <param name="showToolBar">Value of False instructs Web Rule not to display the Tool Bar.</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.ClientOnly(System.Boolean)">
            <summary>
            Sets the value of the ClientOnly property of the underlying instance of RuleEditor class.
            </summary>
            <param name="clientOnly">Value of True sets Web Rule's UI to "client-only" mode</param>
            <returns>Instance of the RuleEditorBuilder type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditorBuilder.Render">
            <summary>
            Renders Web Rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditorBuilder.Editor">
            <summary>
            Gets or sets an instance of the RuleEditor class
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Core.RuleExtensions">
            <summary>
            Provides a set of static methods to apply business rules for objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            <remarks>These methods use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> class internally to apply business rules.</remarks>
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Filter``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Filters the collection of source objects by applying a business rule. The rulesetXml is loaded into <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/>
            and its rules are compiled and stored in memory. Then either the first rule in the ruleset or the one referenced by the rule id is evaluated
            against each object in the collection. Those source objects that pass the rule are returned as a new
            collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TSource">An underlying source type of a generic enumerable collection.</typeparam>
            <param name="source">An enumerable collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/> that needs to be filtered.</param>
            <param name="rulesetXml">The XML containing one or more rules to be evaluted against source objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="ruleId">An optional id of a rule. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its id. <remarks>Not to be confused with external reusable rules referenced in rules inside of the rulesetXml.
            The rule with this id must be present as a top level rule inside the rulesetXml or exception wil be thrown.</remarks></param>
            <param name="getRule">The delegate to a method used to retrieve external rules by id (reusable rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the rulesetXml. If none are found
            an exception will be thrown.</param>
            <returns>Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of source objects that passed the rule evaluation.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Filter``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Filters the collection of source objects by applying a business rule. The rulesetXml is loaded into <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/>
            and its rules are compiled and stored in memory. Then either the first rule in the ruleset or the one referenced by the rule id is evaluated
            against each object in the collection. Those source objects that pass the rule are returned as a new
            collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TSource">An underlying source type of a generic enumerable collection.</typeparam>
            <param name="source">An enumerable collection of type <see cref="T:System.Collections.Generic.IEnumerable`1"/> that needs to be filtered.</param>
            <param name="rulesetXml">The XML containing one or more rules to be evaluted against source objects.
            The XML ruleset must validate against http://rule.codeeffects.com/schemas/rule schema.</param>
            <param name="ruleIndex">A zero-based index of a rule to be executed. If there are more than one rule in the ruleset, you may evaluate a specific
            rule by providing its index. <remarks>Not to be confused with external reusable rules referenced in rules inside of the rulesetXml.
            The rule with this id must be present as a top level rule inside the rulesetXml or exception wil be thrown.</remarks></param>
            <param name="getRule">The delegate to a method used to retrieve external rules by id (reusable rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the rulesetXml. If none are found
            an exception will be thrown.</param>
            <returns>Returns a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> collection of source objects that passed the rule evaluation.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Evaluate``1(``0,System.String,System.String,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Evaluates a rule from the ruleset against given source object. This extension method is just a shortcut for
            calling <see cref="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)"/> method.
            <remarks>Use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> directly if you plan on executing multiple Evaluate calls
            with the same set of rules. The rule evaluator compiles rules once per instantiating.</remarks>
            </summary>
            <typeparam name="TSource">An underlying source type of an object that will have rules evaluated against.</typeparam>
            <param name="source">An object that needs to be evaluated against a rule.</param>
            <param name="rulesetXml">A set of rules. If no rule id is provided, the first rule in the set will be executed.</param>
            <param name="ruleId">An id of a rule to be executed.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
            <returns>True if rule evaluated successfully, False otherwise.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.RuleExtensions.Evaluate``1(``0,System.String,System.Int32,CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Evaluates a rule from the ruleset against given source object. This extension method is just a shortcut for
            calling <see cref="M:CodeEffects.Rule.Core.Evaluator`1.Evaluate(`0,System.String)"/> method.
            <remarks>Use <see cref="T:CodeEffects.Rule.Core.Evaluator`1"/> directly if you plan on executing multiple Evaluate calls
            with the same set of rules. The rule evaluator compiles rules once per instantiating.</remarks>
            </summary>
            <typeparam name="TSource">An underlying source type of an object that will have rules evaluated against.</typeparam>
            <param name="source">An object that needs to be evaluated against a rule.</param>
            <param name="rulesetXml">A set of rules. The rule at the provided index will be executed.</param>
            <param name="ruleIndex">An index of a rule to be executed.</param>
            <param name="getRule">The delegate to a method used to retrieve external rules (rules referenced by other rules).
            If this parameter is null, the Evaluator will attempt to find any referenced rules inside the ruleset. If none are found
            an exception will be thrown.</param>
            <returns>True if rule evaluated successfully, False otherwise.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Attributes.FlowAttribute">
            <summary>
            This entire class will be marked as obsolete in one of the next versions of Web Rule
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.RuleEditor">
            <summary>
            Provides Web Rule ASP UI functionality
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.DataBind">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Focus">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.FindControl(System.String)">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Dispose">
            <summary>
            Clears the Rule Area and disposes all resources related to Web Rule
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ToString(CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="ruleDelegate">Delegate of the method that takes a rule ID and returns rule's XML string</param>
            <returns></returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetSourceXml">
            <summary>
            Returns XML document of the source objcet
            </summary>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetHelpXml">
            <summary>
            Returns content of the default help XML document
            </summary>
            <returns>String representation of the default help XML</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetRuleXml(CodeEffects.Rule.Common.RuleFormatType)">
            <summary>
            Returns string representation of the rule XML. Calling this method is the only way to obtain rule XML in Web Rule.
            </summary>
            <param name="format">One of the members of RuleFormatType enumerator</param>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientSettings">
            <summary>
            Returns JSON string that contains Web Rule UI settings.
            </summary>
            <returns>Json-formatted UI settings</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientRuleData">
            <summary>
            Returns rule's client data. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted rule data</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetClientInvalidData">
            <summary>
            Returns JSON string that contains invalid rule members.
            </summary>
            <returns>Json-formatted array of invalid elements</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.GetSaveArguments">
            <summary>
            Returns save-related data
            </summary>
            <returns>Instance of the SaveEventArgs type</returns>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadRuleFile(System.String)">
            <summary>
            Loads rule XML file into the RuleEditor
            </summary>
            <param name="ruleXmlFileFullPath">Full path to the rule XML file</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadRuleXml(System.String)">
            <summary>
            Loads rule XML into the RuleEditor
            </summary>
            <param name="ruleXml">String representation of the rule XML document</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.LoadClientData(System.String)">
            <summary>
            Loads rule's client data into the RuleEditor.
            </summary>
            <param name="ruleClientData">Json-formatted rule data</param>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.ClearCache">
            <summary>
            Clears from server cache all items stored there by Web Rule. Items amy include source object XML and help XML.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Asp.RuleEditor.Clear">
            <summary>
            Removes all rule elements from the Rule Area
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.SaveRule">
            <summary>
            Web Rule throws this event when the user clicks the Save button on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.DeleteRule">
            <summary>
            Web Rule throws this event when the user clicks the Delete button on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="E:CodeEffects.Rule.Asp.RuleEditor.LoadRule">
            <summary>
            Web Rule throws this event when the user selects a rule from the Rules menu on the Tool Bar.
            Ignored by Web Rule if ShowToolBar is set to False
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ToolBarRules">
            <summary>
            Gets or sets collection of rules that appear in the Rules menu of the Tool Bar. This collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ContextMenuRules">
            <summary>
            Gets or sets collection of rules that appear in context menus of Web Rule. This collection can contain
            only rules of evaluation type (this requirement is not enforced by Web Rule).
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.IsEmpty">
            <summary>
            Gets the value indicating if the user submitted an empty rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.IsValid">
            <summary>
            Gets the value indicating if the user submitted an invalid rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceXml">
            <summary>
            Gets or sets the value of XML document of source object used by this instance of RuleEditor.
            Use the GetSourceXml() method to obtain XML document of the current source if you intend to
            manually alter source object's XML.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HelpXml">
            <summary>
            Gets or sets the XML document of the custom help XML. HelpXml property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule valiadation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceXmlFile">
            <summary>
            Gets or sets the value of the virtual path of custom XML file that this instance of RuleEditor should use as its source object.
            Use the GetSourceXml() method to obtain XML document of the current source if you intend to
            manually alter source object's XML.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceType">
            <summary>
            Gets or sets the type of the source object. Use typeof(YourSource).FullName to obtain this value
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.SourceAssembly">
            <summary>
            Gets or sets the qualified name of the assembly that declares the source object.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CacheSource">
            <summary>
            Gets or sets the value indicating if the source object's data should be cached by the server.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ClientOnly">
            <summary>
            Gets or sets the value that toggles Web Rule's UI "client-only" mode
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowLineDots">
            <summary>
            Gets or sets the value that toggles "dots" at the beginning of each new line in the Rule Area
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowMenuOnRightArrowKey">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user uses keyboard's
            "right arrow" key to navigate the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowMenuOnElementClicked">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu containing related items when user clicks a rule element
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowDescriptionsOnMouseHover">
            <summary>
            Gets or sets the value that toggles the visibility of description of rule fields, in-rule methods,
            actions and nested rules for those elements that have their descriptions set
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.RuleNameIsRequired">
            <summary>
            Gets or sets the value indicating if Web Rule should require each rule to have a name.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowToolBar">
            <summary>
            Gets or sets the value that toggles the visibility of Tool Bar.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Mode">
            <summary>
            Gets or sets the value that defines what type of rules users can create. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Theme">
            <summary>
            Gets or sets the value of Web Rule UI theme. Set this property to ThemeType.None if you intend to use your own styles.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HelpXmlFile">
            <summary>
            Gets or sets the virtual path to the custom help XML file. HelpXmlFile property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule valiadation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ShowHelpString">
            <summary>
            Gets or sets the value that toggles the visibility of Help String.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CacheHelp">
            <summary>
            Gets or sets the value indicating if the help XML should be cached by the server.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.AccessKey">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BackImageUrl">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BorderStyle">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.BorderWidth">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.TabIndex">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Height">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.DefaultButton">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.GroupingText">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ToolTip">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.CssClass">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Controls">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Font">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Direction">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.HorizontalAlign">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.ScrollBars">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Enabled">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.Wrap">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.EnableViewState">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Asp.RuleEditor.EnableTheming">
            <summary>
            (Overriden by Web Rule)
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Client.Element">
            <summary>
            This class is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.#ctor">
            <summary>
            This constructor is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.Clone">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Client.Element.ToString">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Name">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Value">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Type">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.CalType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.FuncType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.InpType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ParameterType">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Oper">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Min">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Max">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Dec">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Cal">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Enums">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.En">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Format">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsRule">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsInstance">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsCustomStringMethod">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsCustomNullCheck">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.IsOrganicParenthesis">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.NotFound">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Class">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Assembly">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.CaseSensitive">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ReturnEnumClass">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.ReturnEnumAssembly">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Client.Element.Token">
            <summary>
            This property is not intended for public use
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Core.ExpressionBuilder`1.source">
            <summary>
            Source is a parameter for the final lambda expression. The value of source is usually set by iterators and represents individual source objects.
            Internally, it is represented as "x", i.e. x => DoSomething(x);
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CodeEffects.Rule.Core.ExpressionBuilder`1.CompileRule(System.Xml.Linq.XElement)" -->
        <member name="M:CodeEffects.Rule.Core.ExpressionBuilder`1.BuildCondition(System.Xml.Linq.XElement)">
            <summary>
            Builds an expression representing a logical operator, i.e. equality, comparison, range check, etc, that returns a boolean.
            </summary>
            <example>
            Following condition would translate into (x.LastName == "Smith").
            <code>
            	<condition type="equal">
            		<property name="LastName" />
            		<value>Smith</value>
            	</condition>
            </code>
            </example>
            <param name="conditionElement">The "condition" element, a container for operator's arguments.</param>
            <returns>A boolean expression.</returns>
        </member>
        <member name="M:CodeEffects.Rule.Core.ExpressionBuilder`1.BuildPropertyNullChecks(System.Linq.Expressions.Expression[])">
            <summary>
            This method traverses compounded property accessors and builds safety checks for null references.
            For instance x.Home.Address.City would need checks for x, Home, and Adress not being null as to avoid the NullReferenceException.
            However, the root expression (x in x.Home) being a source object is not evaluated for null here since it is done somewhere else in ExpressionBuilder
            as part of global optimizations.
            </summary>
            <param name="expressions"></param>
            <returns>An Expression containing one or more Null unequality checks.</returns>
        </member>
        <member name="T:CodeEffects.Rule.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.Errors">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;codeeffects&gt;
            	&lt;values&gt;
            		&lt;s100&gt;In order to load source data, the following must be true: a.)The property &quot;SourceXml&quot; must contain valid source XML, or b.) The &quot;SourceXmlFile&quot; must contain the virtual path to an existing source XML file, or c.) The properties &quot;SourceType&quot; and &quot;SourceAssembly&quot; must contain the full names of the assembly and type of your source object. Your project must reference that assembly.&lt;/s100&gt;
            		&lt;s101&gt;Assembly or type names cannot be null re [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CodeEffects.Rule.Resource.RuleHelp">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;codeeffects&gt;
            	&lt;help&gt;
            		&lt;i101&gt;Click inside of the rule area to begin a new rule&lt;/i101&gt;
            		&lt;i102&gt;Click anywhere inside of the rule area to modify the rule&lt;/i102&gt;
            		&lt;i103&gt;Select a field or parenthesis from the list; hit Space Bar if it&apos;s hidden&lt;/i103&gt;
            		&lt;i104&gt;Select an operator from the list; hit Space Bar if it&apos;s hidden&lt;/i104&gt;
            		&lt;i105&gt;Type the value; use Backspace to delete, Enter or Right Arrow to complete&lt;/i105&gt;
            		&lt;i106&gt;Select calculation elements from the lis [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.RuleException">
            <summary>
            Base class for all rule-related exception types. This exception can be thrown on generic rule-related issues
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.RuleException.#ctor(System.String)">
            <summary>
            The RuleException type is not intended for public use
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CodeEffects.Rule.Common.RuleException.#ctor(System.String,System.String[])">
            <summary>
            The RuleException type is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.RuleException.Message">
            <summary>
            Message containing details of the exception
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.RuleException.Number">
            <summary>
            Internal Web Rule number of the exception being thrown. Use this number when contacting customer support.
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor">
            <summary>
            Public c-tor of the MenuItem class
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor(System.String,System.String)">
            <summary>
            Public c-tor of the MenuItem class
            </summary>
            <param name="id">Sets the ID property of this instance of MenuItem class</param>
            <param name="displayName">Sets the DisplayName property of this instance of MenuItem class</param>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Public c-tor of the MenuItem class
            </summary>
            <param name="id">Sets the ID property of this instance of MenuItem class</param>
            <param name="displayName">Sets the DisplayName property of this instance of MenuItem class</param>
            <param name="description">Sets the Description property of this instance of MenuItem class</param>
        </member>
        <member name="M:CodeEffects.Rule.Common.MenuItem.ToString">
            <summary>
            This method is not intended for public use
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.ID">
            <summary>
            Gets or sets the ID of the menu item. Mostyly used for rule IDs.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.DisplayName">
            <summary>
            Gets or sets the display name of the menu item. Mostly used for rule
            names which are displayed in the context and Tool Bar menus of Web Rule.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Common.MenuItem.Description">
            <summary>
            Optional. Gets or sets the description of the menu item. If set, the
            Help String displays this description when this menu item is selected.
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Asp.RuleEventHandler">
            <summary>
            Defines the type of the DeleteRule and LoadRule public events
            of the CodeEffects.Rule.Asp.RuleEditor class.
            </summary>
            <param name="sender">Instance of the Asp.RuleEditor class</param>
            <param name="e">Event data</param>
        </member>
        <member name="T:CodeEffects.Rule.Mvc.RuleEditor">
            <summary>
            Provides Web Rule MVC UI functionality
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.Render">
            <summary>
            Renders this instance of RuleEditor
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientSettings">
            <summary>
            Returns Web Rule UI settings. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted UI settings</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientRuleData">
            <summary>
            Returns rule's client data. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted rule data</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.LoadClientData(System.String)">
            <summary>
            Loads rule's client data into the RuleEditor.
            </summary>
            <param name="ruleClientData">Json-formatted rule data</param>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetClientInvalidData">
            <summary>
            Returns data of the invalid rule members. Should be used by the "client-only" RuleEditor instances.
            </summary>
            <returns>Json-formatted array of invalid elements</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetSourceXml">
            <summary>
            Returns XML document of the source objcet
            </summary>
            <returns>Xml document as string</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.GetHelpXml">
            <summary>
            Returns the string representation of the default Help XML document. Use this document as a template for custom help documents.
            </summary>
            <returns>String representation of the default help XML</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.ToString">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <returns>Text representation of the current rule</returns>
        </member>
        <member name="M:CodeEffects.Rule.Mvc.RuleEditor.ToString(CodeEffects.Rule.Core.GetRuleDelegate)">
            <summary>
            Returns text representation of the rule that is currently displayed in the Rule Area. Returns base.ToString() if no rules have been loaded and the Rule Area is empty.
            </summary>
            <param name="ruleDelegate">Delegate of the method that takes a rule ID and returns rule's XML string</param>
            <returns></returns>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Id">
            <summary>
            Gets or sets server ID of the instance of RuleEditor. Used to distinguish this instance from
            all other instances that may be declared on the same view. The value of this property should
            be unique for the current view. This requirement is not enforced by Web Rule.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.SaveController">
            <summary>
            Gets or sets the name of the controller that declares the Save action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.SaveAction">
            <summary>
            Gets or sets the name of the Save action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.DeleteController">
            <summary>
            Gets or sets the name of the controller that declares the Delete action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.DeleteAction">
            <summary>
            Gets or sets the name of the Delete action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.LoadController">
            <summary>
            Gets or sets the name of the controller that declares the Load action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.LoadAction">
            <summary>
            Gets or sets the name of the Load action.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.HelpXml">
            <summary>
            Gets or sets the XML document of the custom help XML. HelpXml property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule validation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.HelpXmlFile">
            <summary>
            Gets or sets the virtual path to the custom help XML file. HelpXmlFile property allows you to specify
            a Help XML that contains different values for Help String messages, Tool Bar
            labels and rule validation error messages. This could be helpful for multilingual applications.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowHelpString">
            <summary>
            Gets or sets the value that toggles the visibility of Help String.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowLineDots">
            <summary>
            Gets or sets the value that toggles "dots" at the beginning of each new line in the Rule Area
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowMenuOnRightArrowKey">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user uses keyboard's
            "right arrow" key to navigate the rule
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowMenuOnElementClicked">
            <summary>
            Gets or sets the value that toggles the visibility of the context menu when user clicks a rule element
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowDescriptionsOnMouseHover">
            <summary>
            Gets or sets the value that toggles the visibility of description of rule fields, in-rule methods,
            actions and nested rules for those elements that have their descriptions set
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.RuleNameIsRequired">
            <summary>
            Gets or sets the value indicating if Web Rule should require each rule to have a name.
            This property is ignored id ShowToolBar is set to False.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ShowToolBar">
            <summary>
            Gets or sets the value that toggles the visibility of Tool Bar.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Mode">
            <summary>
            Gets or sets the value that defines what type of rules users can create. Value of RuleType.Evaluation
            limits Web Rule UI to evaluation type rules only. Value of RuleType.Execution permits both
            execution and evaluation types.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Theme">
            <summary>
            Gets or sets the value of Web Rule UI theme. Set this property to ThemeType.None if you intend to use your own styles.
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ClientOnly">
            <summary>
            Gets or sets the value that toggles Web Rule's UI "client-only" mode
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ToolBarRules">
            <summary>
            Gets or sets collection of rules that appear in the Rules menu of the Tool Bar. This collection can contain
            rules of all types. This property is ignored if ShowToolBar is set to False. 
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.ContextMenuRules">
            <summary>
            Gets or sets collection of rules that appear in context menus of Web Rule. This collection can contain
            only rules of evaluation type (this requirement is not enforced by Web Rule).
            </summary>
        </member>
        <member name="P:CodeEffects.Rule.Mvc.RuleEditor.Rule">
            <summary>
            Gets or sets the rule model
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.SourceException">
            <summary>
            This exception is typically thrown on source-related issues
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.SourceException.#ctor(System.String)">
            <summary>
            The SourceException type is not intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Common.SourceException.#ctor(System.String,System.String[])">
            <summary>
            The SourceException type is not intended for public use
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Common.FlowType">
            <summary>
            This enum is used by CodeEffects.Rule.Attributes.FlowAttribute
            to indicate the type of flow element
            </summary>
            <remarks>Because the FlowAttribute is going to be deprecated
            in one of the future versions of Web Rule, this enum will become
            obsolete as well.</remarks>
        </member>
        <member name="F:CodeEffects.Rule.Common.FlowType.If">
            <summary>
            IF flow elements
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.FlowType.ElseIf">
            <summary>
            ELSE IF flow element
            </summary>
        </member>
        <member name="F:CodeEffects.Rule.Common.FlowType.Else">
            <summary>
            ELSE flow element
            </summary>
        </member>
        <member name="T:CodeEffects.Rule.Models.RuleDataTypeConverter">
            <summary>
            This class is no intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This method is no intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This method is no intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method is no intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method is no intended for public use
            </summary>
        </member>
        <member name="M:CodeEffects.Rule.Models.RuleDataTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            This method is no intended for public use
            </summary>
        </member>
    </members>
</doc>
